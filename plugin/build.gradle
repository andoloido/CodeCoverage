/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/custom_plugins.html
 */
plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'

    // Apply the Groovy plugin to add support for Groovy
    id 'groovy'

    id "com.gradle.plugin-publish"

    id 'java'
    id 'kotlin'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation gradleApi()

    implementation "com.android.tools.build:gradle:${gradle_version}"

    //ASM
    implementation "org.ow2.asm:asm:$asm_version"
    implementation "org.ow2.asm:asm-util:$asm_version"
    implementation "org.ow2.asm:asm-commons:$asm_version"
}

gradlePlugin {
    plugins {
        coveragePlugin {
            id = 'com.andoloido.coverage'   //插件的id，到时候apply的插件id
            implementationClass = 'com.andoloido.coverage.CoveragePlugin'
            displayName = 'Coverage Plugin'
            description = 'code coverage'  //插件描述
//            tags = ['coverage', 'asm']
        }
    }
}

// Add a source set for the functional test suite
//sourceSets {
//    functionalTest {
//    }
//}

//gradlePlugin.testSourceSets(sourceSets.functionalTest)
//configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
//tasks.register('functionalTest', Test) {
//    testClassesDirs = sourceSets.functionalTest.output.classesDirs
//    classpath = sourceSets.functionalTest.runtimeClasspath
//    useJUnitPlatform()
//}
//
//tasks.named('check') {
//    // Run the functional tests as part of `check`
//    dependsOn(tasks.functionalTest)
//}
//
//tasks.named('test') {
//    // Use JUnit Platform for unit tests.
//    useJUnitPlatform()
//}
